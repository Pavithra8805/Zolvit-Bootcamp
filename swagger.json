{
    "openapi": "3.0.3",
    "info": {
        "title": "User API",
        "version": "1.0.0",
        "description": "API for managing users"
    },
    "servers": [
        {
            "url": "http://localhost:3000"
        }
    ],
    "paths": {
        "/": {
            "get": {
                "summary": "Home route",
                "tags": [
                    "default"
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with HTML content",
                        "content": {
                            "text/html": {
                                "schema": {
                                    "type": "string",
                                    "example": "<h1>Welcome to Zolvit Bootcamp!</h1>\n<p>This server returns HTML on '/' and JSON on '/data'</p>"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data": {
            "get": {
                "summary": "JSON route",
                "tags": [
                    "default"
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with JSON content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "bootcamp": {
                                            "type": "string",
                                            "example": "Zolvit Bootcamp"
                                        },
                                        "day": {
                                            "type": "integer",
                                            "example": 3
                                        },
                                        "task": {
                                            "type": "string",
                                            "example": "Build simple server returning HTML on '/' and JSON on '/data'"
                                        },
                                        "completed": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "summary": "Add a new user",
                "tags": [
                    "user"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get all users",
                "tags": [
                    "user"
                ],
                "responses": {
                    "200": {
                        "description": "List of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{userId}": {
            "put": {
                "summary": "Update user by ID",
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete user by ID",
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of the user to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "683eef9bfa1d67d31d9d4f84"
                    },
                    "name": {
                        "type": "string",
                        "example": "Pavithra"
                    },
                    "email": {
                        "type": "string",
                        "example": "pavithra@gmail.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "vinni_pavithra"
                    }
                }
            },
            "UserInput": {
                "type": "object",
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Pavithra"
                    },
                    "email": {
                        "type": "string",
                        "example": "pavi123@gmail.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "vinni_pavi"
                    }
                }
            },
            "Error": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "example": 400
                    },
                    "message": {
                        "type": "string",
                        "example": "Invalid input"
                    }
                }
            }
        }
    }
}